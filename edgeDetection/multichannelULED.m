function [ft,ftn,fsn] = multichannelULED(im,wVector,window,tnorms,tconorms)%  function Multichannel Upper-Lower Edge Detector%%   [ft] = multichannelULED(image,wVector,window,tnorms,tconorms)%%%   Scalar gradient computation based on the article by %       Guerra et al. (see below).%   Each pixel is assiged the difference between tn- and sn-processing of an%       image to extract memberships to the edges.%	Then novelty from the work by Barrenechea et al. (see function uled) is that%		this function handles multichannel images by aggregating the edges%		using OWA operators.%%  [Inputs]%%    im (mandatory)- image with values in the interval [0,1].%%	 wVector (mandatory)- Weighing vector. Must contain as many%		values as channels in the image.%%    windowsize (optional, default='n3')%       string-coded window size. It can be %			->'nX', meaning a square window of X positions%			->'dX-Y', meaning a vector of X positions in the%				Y direction (see paper).%		in any case, X must be odd.%%    tnorms (optional, default = {'T_M'})%       vector containing one or two t-norms names, in %       char format (e.g. a = {'T_M','T_P'}). In case%       there is only one t-norm, the second of the operators%       for the tn-processing will be the same as the first one.%%       Accepted values for the t-norms are 'T_M', 'T_L',%			'T_P' and 'T_nM'.%%    tconorms (optional, default = {'S_M'})%       vector containing one or two t-conorms names, in %       char format (e.g. a = {'S_M','S_L'}). In case%       there is only one t-conorm, the second of the operators%       for the sn-processing will be the same as the first one.%%       Accepted values for the t-conorms are 'S_M', 'S_L',%			'S_P' and 'S_nM'.%%  [Outputs]%%    ft- w-fuzzy edges images%%  [Usages]%    function [ft,ftn,fsn] = multichannelULED(image,[0.5 0.5 0])%       (equiv to uled(image,[0.5 0.5 0],'n3',{'T_M'},{'S_M'})%%%  [dependences]%%   function uled%%	In addiation, in case the user demands other t-norms/t-conorms, %	 each name of t-norm and t-conorm must correspond to a reachable function%		with the same name. It must be able to handle a call%		   c= tnorm(a,b)%	 where a is an scalar or a matrix and%		   b is an scalar or a matrix.%%%  [References]%%	Barrenechea, E.; Bustince, H.; Lopez-Molina, C.; De Baets, B.%	Construction of Interval-valued Fuzzy Relations With Application to the Generation of Fuzzy Edge Images.%	IEEE Transactions on Fuzzy Systems%	Oct. 2011, Volume 19, Issue 5%% 	Guerra, C.; Jurio, A.; Bustince, H. & Lopez-Molina, C. %	Multichannel generalization of the Upper-Lower Edge Detector using ordered weighted averaging operators%	Journal of Intelligent and Fuzzy Systems, 2014%%% 0- Validate Arguments%%- Nargin checkingassert(nargin==2 || nargin==3 || nargin==5,'Wrong invokation of uled function: Invalid number of parameters.');assert((max(im(:))<=1) && (min(im(:))>=0),'Error at function uled: Image contains values outside [0,1] interval');assert(size(im,3)==length(wVector),'Error at function uled: The number of elements in the vector does not match the number of channels in the image.');%- Defaultsif (nargin==2)    window='n3';    tnorms={'T_M'};    tconorms={'S_M'};elseif(nargin==3)    tnorms={'T_M'};    tconorms={'S_M'};end    assert(1<=length(tnorms) && length(tnorms)<=2,'Wrong invokation of uled function: Invalid number of tnorms.');assert(1<=length(tconorms) && length(tconorms)<=2,'Wrong invokation of uled function: Invalid number of tconorms.');fts=zeros(size(im));for idxChannel=1:size(im,3)	fts(:,:,idxChannel)=uled(im(:,:,idxChannel),window,tnorms,tconorms);endfts=sort(fts,3,'descend');ft=zeros(size(im,1),size(im,2));for idxChannel=1:size(im,3)	ft=ft+fts(:,:,idxChannel).*wVector(idxChannel);end			